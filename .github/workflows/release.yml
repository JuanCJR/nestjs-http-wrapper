name: Manual Release

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Type of version bump'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
      dry_run:
        description: 'Dry run (no actual publish)'
        required: false
        default: false
        type: boolean

jobs:
  release:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: write
      packages: write
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '20.x'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

      - name: Run tests
        run: npm test

      - name: Run tests with coverage
        run: npm run test:coverage:lcov

      - name: Build project
        run: npm run build

      - name: Check build artifacts
        run: |
          ls -la dist/
          test -f dist/index.js
          test -f dist/index.d.ts

      - name: Verify package contents
        run: npm pack --dry-run

      - name: Bump version
        if: steps.check-version.outputs.exists == 'false'
        run: |
          npm version ${{ github.event.inputs.version_type }} --no-git-tag-version
          echo "NEW_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV

      - name: Check if version exists in NPM
        id: check-version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          if npm view nestjs-http-wrapper@$VERSION version > /dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "Version $VERSION already exists in NPM"
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "Version $VERSION is new"
          fi

      - name: Create Git tag and push
        if: steps.check-version.outputs.exists == 'false' && github.event.inputs.dry_run != 'true'
        run: |
          VERSION=$(node -p "require('./package.json').version")
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add package.json package-lock.json
          git commit -m "chore: bump version to $VERSION"
          git tag -a "v$VERSION" -m "Release version $VERSION"
          git push origin main
          git push origin "v$VERSION"

      - name: Publish to NPM
        if: steps.check-version.outputs.exists == 'false' && github.event.inputs.dry_run != 'true'
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        if: steps.check-version.outputs.exists == 'false' && github.event.inputs.dry_run != 'true'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.NEW_VERSION }}
          release_name: Release v${{ env.NEW_VERSION }}
          body: |
            ## Changes in this Release

            See [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md) for detailed changes.

            ## Installation

            ```bash
            npm install nestjs-http-wrapper@${{ env.NEW_VERSION }}
            ```
          draft: false
          prerelease: false

      - name: Dry run summary
        if: github.event.inputs.dry_run == 'true'
        run: |
          echo "## Dry Run Summary"
          echo "Version type: ${{ github.event.inputs.version_type }}"
          echo "New version would be: $(node -p "require('./package.json').version")"
          echo "Package contents:"
          npm pack --dry-run
